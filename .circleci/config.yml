# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: apk add --update aws-cli
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1

  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["72:02:90:ce:89:46:4c:3b:f1:d2:e4:e1:b0:19:d4:f2"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and configure server
          command: |
            ansible-playbook -i inventory.txt main-remote.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test
          command: |
            URL="https://blog.udacity.com/"
            # Test if website exists
            if curl -s --head ${URL}
            then
              return 0
            else
              return 1
            fi

  smoke_test2:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # fail the job intentionally to stimulate an error
          command: return 1
      - destroy_environment
        


workflows:
  my-workflow:
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      #- smoke_test
      - smoke_test2:
          requires:
            - create_infrastructure
